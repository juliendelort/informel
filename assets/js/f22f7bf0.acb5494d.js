"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[649],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),c=o,f=m["".concat(p,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5710:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:10,hide_title:!0,custom_edit_url:null,title:"Usage in Remix"},a="Usage in Remix",l={unversionedId:"remix",id:"remix",title:"Usage in Remix",description:"Remix uses Server Side Rendering (SSR) to render the page on the server and then hydrates the page on the client side.",source:"@site/docs/remix.mdx",sourceDirName:".",slug:"/remix",permalink:"/remix",editUrl:null,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,hide_title:!0,custom_edit_url:null,title:"Usage in Remix"},sidebar:"tutorialSidebar",previous:{title:"Usage in React",permalink:"/react"},next:{title:"API",permalink:"/api"}},p=[{value:"Limitations",id:"limitations",children:[],level:2}],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usage-in-remix"},"Usage in Remix"),(0,o.kt)("p",null,"Remix uses Server Side Rendering (SSR) to render the page on the server and then hydrates the page on the client side.\n",(0,o.kt)("inlineCode",{parentName:"p"},"informel")," relies on Web Components, so the library needs to be imported & initialized on the client side only.\nTo do so, add the following to your ",(0,o.kt)("inlineCode",{parentName:"p"},"App")," component located inside ",(0,o.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/file-conventions/root"},"the root file of your project"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"useEffect(() => {\n    require('informel');\n  }, []);\n")),(0,o.kt)("p",null,"Full example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export default function App() {\n  // Add this useEffect\n  useEffect(() => {\n    require('informel');\n  }, []);\n\n  // Rest of the page, no changes below\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n")),(0,o.kt)("p",null,"Then, in order to use ",(0,o.kt)("inlineCode",{parentName:"p"},"informel")," with ",(0,o.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/components/form"},"Remix's Form component"),", you'll need to add the ",(0,o.kt)("a",{parentName:"p",href:"/api#attributes"},"defaultSubmit")," prop to your ",(0,o.kt)("inlineCode",{parentName:"p"},"<InformEl>")," component.\nThat'll remove the usage of ",(0,o.kt)("inlineCode",{parentName:"p"},"e.preventDefault()")," by ",(0,o.kt)("inlineCode",{parentName:"p"},"informel")," when submitting, not getting in the way of the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Form/>")," component."),(0,o.kt)("p",null,"In other words, just wrapt the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Form/>")," component with ",(0,o.kt)("inlineCode",{parentName:"p"},"<InformEl defaultSubmit>")," and you're good to go!"),(0,o.kt)("p",null,"Here is an example:"),(0,o.kt)("iframe",{width:"100%",height:"800",src:"https://stackblitz.com/edit/remix-run-remix-1qpoxc?embed=1&file=app/routes/index.tsx"}),(0,o.kt)("h2",{id:"limitations"},"Limitations"),(0,o.kt)("p",null,"When using ",(0,o.kt)("inlineCode",{parentName:"p"},"<InformEl defaultSubmit>")," with the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Form/>"),", the ",(0,o.kt)("a",{parentName:"p",href:"/api#attributes"},"resetOnSubmit")," prop is not supported: It would reset the form before the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Form/>")," component has a chance to do handle submission and it would receive empty values."),(0,o.kt)("p",null,"If you need to use that feature, you can use a regular ",(0,o.kt)("inlineCode",{parentName:"p"},"<form/>")," element and trigger the submission manually via ",(0,o.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/hooks/use-fetcher#fetchersubmit"},"useFetcher"),"."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'export default function Index() {\n  const fetcher = useFetcher();\n\n  const handleSubmit = ({ detail: { values } }: CustomEvent<{ values: { login: string, password: string; }; }>) => {\n    fetcher.submit(values, { method: \'post\' });\n  };\n\n  return (\n    <InformEl resetOnSubmit onInformSubmit={handleSubmit}> {/* no defaultSubmit prop anymore */}\n      <form> {/* use a regular form here */}\n        <InformField>\n          <input\n            type="email"\n            name="login"\n            placeholder="login"\n            aria-label="login"\n            required\n          />\n        </InformField>\n        <InformField>\n          <input\n            type="password"\n            name="password"\n            placeholder="password"\n            aria-label="password"\n            required\n          />\n        </InformField>\n        <button type="submit">Submit</button>\n      </form>\n    </InformEl>\n  );\n}\n\n')))}m.isMDXComponent=!0}}]);
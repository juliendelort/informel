"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[705],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(t),m=i,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return t?r.createElement(d,a(a({ref:n},u),{},{components:t})):r.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5965:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],l={sidebar_position:5,hide_title:!0,custom_edit_url:null,title:"Listening for changes"},s="Listening for changes",c={unversionedId:"listening-for-changes",id:"listening-for-changes",title:"Listening for changes",description:"`` exposes the following events",source:"@site/docs/listening-for-changes.mdx",sourceDirName:".",slug:"/listening-for-changes",permalink:"/informel/docs/listening-for-changes",editUrl:null,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,hide_title:!0,custom_edit_url:null,title:"Listening for changes"},sidebar:"tutorialSidebar",previous:{title:"Getting form values",permalink:"/informel/docs/getting-form-values"},next:{title:"Submitting",permalink:"/informel/docs/submitting"}},u=[],p={toc:u};function f(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"listening-for-changes"},"Listening for changes"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<inform-el />")," exposes the following events"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inform-input"),": similar to the native ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"},"input")," event"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inform-change"),": similar to the native ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"},"change")," event")),(0,o.kt)("p",null,"Both events contain a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail"},"detail")," field, which is an object with the following fields:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"values")," : the current form values."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"changedField"),": the name of the field that changed.")),(0,o.kt)("p",null,"Here is an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<inform-el>\n    <form>\n        <label>\n            First Name\n            <input type=\"text\" name=\"firstName\" />\n        </label>\n        <label>\n            Last Name\n            <input type=\"text\" name=\"lastName\" />\n        </label>\n        <button type=\"submit\">Submit</button>\n    </form>\n</inform-el>\n\n<script>\n    document.querySelector('inform-el').addEventListener('inform-input', ({ detail: { values, changeField } }) => {\n        // After typing 'a' in \"First Name\":\n        console.log('Values:', values); // {firstName: 'a', lastName: ''}\n        console.log('Changed field:', changeField); // \"firstName\"\n    });\n<\/script>\n")))}f.isMDXComponent=!0}}]);
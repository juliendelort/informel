"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[649],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(t),d=o,f=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5710:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return s},default:function(){return c}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={sidebar_position:10,hide_title:!0,custom_edit_url:null,title:"Usage in Remix"},p="Usage in Remix",u={unversionedId:"remix",id:"remix",title:"Usage in Remix",description:"Remix uses Server Side Rendering (SSR) to render the page on the server and then hydrates the page on the client side.",source:"@site/docs/remix.mdx",sourceDirName:".",slug:"/remix",permalink:"/remix",editUrl:null,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,hide_title:!0,custom_edit_url:null,title:"Usage in Remix"},sidebar:"tutorialSidebar",previous:{title:"Usage in React",permalink:"/react"},next:{title:"API",permalink:"/api"}},s=[{value:"Limitations",id:"limitations",children:[],level:2}],m={toc:s};function c(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"usage-in-remix"},"Usage in Remix"),(0,i.kt)("p",null,"Remix uses Server Side Rendering (SSR) to render the page on the server and then hydrates the page on the client side.\n",(0,i.kt)("inlineCode",{parentName:"p"},"informel")," relies on Web Components, so the library needs to be imported & initialized on the client side only.\nTo do so, add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},"App")," component located inside ",(0,i.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/file-conventions/root"},"the root file of your project"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"useEffect(() => {\n    require('informel');\n  }, []);\n")),(0,i.kt)("p",null,"Full example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"export default function App() {\n  // Add this useEffect\n  useEffect(() => {\n    require('informel');\n  }, []);\n\n  // Rest of the page, no changes below\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n")),(0,i.kt)("p",null,"Then, in order to use ",(0,i.kt)("inlineCode",{parentName:"p"},"informel")," with ",(0,i.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/components/form"},"Remix's Form component"),", you'll need to add the ",(0,i.kt)("a",{parentName:"p",href:"/api#attributes"},"defaultSubmit")," prop to your ",(0,i.kt)("inlineCode",{parentName:"p"},"<InformEl>")," component.\nThat'll remove the usage of ",(0,i.kt)("inlineCode",{parentName:"p"},"e.preventDefault()")," by ",(0,i.kt)("inlineCode",{parentName:"p"},"informel")," when submitting, not getting in the way of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Form/>")," component."),(0,i.kt)("p",null,"In other words, just wrapt the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Form/>")," component with ",(0,i.kt)("inlineCode",{parentName:"p"},"<InformEl defaultSubmit>")," and you're good to go!"),(0,i.kt)("p",null,"Here is an example:"),(0,i.kt)("iframe",{width:"100%",height:"800",src:"https://stackblitz.com/edit/remix-run-remix-1qpoxc?embed=1&file=app/routes/index.tsx"}),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("p",null,"When using ",(0,i.kt)("inlineCode",{parentName:"p"},"<InformEl defaultSubmit>")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Form/>"),", the ",(0,i.kt)("a",{parentName:"p",href:"/api#attributes"},"resetOnSubmit")," prop is not supported: It would reset the form before the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Form/>")," component has a chance to do handle submission and it would receive empty values."),(0,i.kt)("p",null,"If you need to use that feature, you can use a regular ",(0,i.kt)("inlineCode",{parentName:"p"},"<form/>")," element and trigger the submission manually via ",(0,i.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/hooks/use-fetcher#fetchersubmit"},"useFetcher"),"."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'export default function Index() {\n  const fetcher = useFetcher();\n\n  const handleSubmit = ({ detail: { values } }: CustomEvent<{ values: { login: string, password: string; }; }>) => {\n    fetcher.submit(values, { method: \'post\' });\n  };\n\n  return (\n    <InformEl resetOnSubmit onInformSubmit={handleSubmit}> {/* no defaultSubmit prop anymore */}\n      <form> {/* use a regular form here */}\n        <InformField>\n          <input\n            type="email"\n            name="login"\n            placeholder="login"\n            aria-label="login"\n            required\n          />\n        </InformField>\n        <InformField>\n          <input\n            type="password"\n            name="password"\n            placeholder="password"\n            aria-label="password"\n            required\n          />\n        </InformField>\n        <button type="submit">Submit</button>\n      </form>\n    </InformEl>\n  );\n}\n\n')))}c.isMDXComponent=!0}}]);
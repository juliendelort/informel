"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[705],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),f=i,d=u["".concat(s,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5965:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:5,hide_title:!0,custom_edit_url:null,title:"Listening for changes"},l="Listening for changes",o={unversionedId:"listening-for-changes",id:"listening-for-changes",title:"Listening for changes",description:"`` exposes the following events",source:"@site/docs/listening-for-changes.mdx",sourceDirName:".",slug:"/listening-for-changes",permalink:"/listening-for-changes",editUrl:null,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,hide_title:!0,custom_edit_url:null,title:"Listening for changes"},sidebar:"tutorialSidebar",previous:{title:"Getting form values",permalink:"/getting-form-values"},next:{title:"Submitting",permalink:"/submitting"}},s=[],c={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"listening-for-changes"},"Listening for changes"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<inform-el />")," exposes the following events"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inform-input"),": similar to the native ",(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"},"input")," event"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"inform-change"),": similar to the native ",(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"},"change")," event")),(0,i.kt)("p",null,"Both events contain a ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail"},"detail")," field, which is an object with the following fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"values")," : the current form values."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"changedField"),": the name of the field that changed.")),(0,i.kt)("p",null,"Here is an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<inform-el>\n    <form>\n        <label>\n            First Name\n            <input type=\"text\" name=\"firstName\" />\n        </label>\n        <label>\n            Last Name\n            <input type=\"text\" name=\"lastName\" />\n        </label>\n        <button type=\"submit\">Submit</button>\n    </form>\n</inform-el>\n\n<script>\n    document.querySelector('inform-el').addEventListener('inform-input', ({ detail: { values, changeField } }) => {\n        // After typing 'a' in \"First Name\":\n        console.log('Values:', values); // {firstName: 'a', lastName: ''}\n        console.log('Changed field:', changeField); // \"firstName\"\n    });\n<\/script>\n")))}u.isMDXComponent=!0}}]);